"""Enhanced user models with improved search and features

Revision ID: ee33c3962a8b
Revises: 
Create Date: 2024-10-31 21:42:40.002135

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee33c3962a8b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('time_required', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.String(length=200), nullable=True),
    sa.Column('availability', sa.String(length=200), nullable=True),
    sa.Column('min_price', sa.Float(), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('total_ratings', sa.Integer(), nullable=True),
    sa.Column('location_coverage', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('default_location', sa.String(length=200), nullable=True),
    sa.Column('preferred_payment_method', sa.String(length=50), nullable=True),
    sa.Column('total_spent', sa.Float(), nullable=True),
    sa.Column('favorite_professionals', sa.String(length=500), nullable=True),
    sa.Column('default_pincode', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professional',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('qualification', sa.String(length=200), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('total_earnings', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('total_ratings', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('pincode', sa.String(length=10), nullable=True),
    sa.Column('available_hours', sa.String(length=200), nullable=True),
    sa.Column('service_area', sa.String(length=500), nullable=True),
    sa.Column('languages', sa.String(length=200), nullable=True),
    sa.Column('specializations', sa.String(length=500), nullable=True),
    sa.Column('certifications', sa.String(length=500), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('response_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('date_of_request', sa.DateTime(), nullable=True),
    sa.Column('date_of_completion', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['professional.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_request')
    op.drop_table('professional')
    op.drop_table('customer')
    op.drop_table('user')
    op.drop_table('service')
    # ### end Alembic commands ###
